/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as BadgesIndexImport } from './routes/badges.index'
import { Route as BadgesIdImport } from './routes/badges.$id'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BadgesIndexRoute = BadgesIndexImport.update({
  id: '/badges/',
  path: '/badges/',
  getParentRoute: () => rootRoute,
} as any)

const BadgesIdRoute = BadgesIdImport.update({
  id: '/badges/$id',
  path: '/badges/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/badges/$id': {
      id: '/badges/$id'
      path: '/badges/$id'
      fullPath: '/badges/$id'
      preLoaderRoute: typeof BadgesIdImport
      parentRoute: typeof rootRoute
    }
    '/badges/': {
      id: '/badges/'
      path: '/badges'
      fullPath: '/badges'
      preLoaderRoute: typeof BadgesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/badges/$id': typeof BadgesIdRoute
  '/badges': typeof BadgesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/badges/$id': typeof BadgesIdRoute
  '/badges': typeof BadgesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/badges/$id': typeof BadgesIdRoute
  '/badges/': typeof BadgesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/login' | '/profile' | '/badges/$id' | '/badges'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/login' | '/profile' | '/badges/$id' | '/badges'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/login'
    | '/profile'
    | '/badges/$id'
    | '/badges/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  BadgesIdRoute: typeof BadgesIdRoute
  BadgesIndexRoute: typeof BadgesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  BadgesIdRoute: BadgesIdRoute,
  BadgesIndexRoute: BadgesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/login",
        "/profile",
        "/badges/$id",
        "/badges/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/badges/$id": {
      "filePath": "badges.$id.tsx"
    },
    "/badges/": {
      "filePath": "badges.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
